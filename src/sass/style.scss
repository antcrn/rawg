@import "~bootstrap/scss/bootstrap";
$bg-color: #161515;
$primary-color: #fff;
$title-color: #fff;
@font-face {
    font-family: 'Gogh-ExtraBold';
    src: url('../fonts/Gogh-ExtraBold.otf');
}

body {
    background-color: $bg-color;
    color: $primary-color;
    margin: 2px;
}

h1 {
    color: $title-color;
    font-family: 'Gogh-ExtraBold';
}

.title {
    color: red;
}

// GRID
.cardGame {
    padding: 0;
    border: 5px solid $bg-color;
    .info-game {
        opacity: 0
    }
    .info-game:hover>.card-img {
        opacity: 0;
        .info-game {
            background-color: #161515;
        }
    }
}

#platformGameList {
    span {
        margin-right: 2px;
    }
}

@mixin welcome($align,
$margin: 10px) {
    display: inline-block;
    vertical-align: $align;
    margin-left: $margin;
}

// Appel de la mixin
.bloc {
    @include welcome(middle);
}

.loading {
    display: inline-flex;
    height: 100px;
    width: 100px;
    background-color: whitesmoke;
    margin: 30px auto;
    border-radius: 50%;
}

@mixin animation-mixin($name,
$color-var) {
    @keyframes #{$name} {
        50% {
            background-color: $color-var;
        }
    }
}

@include animation-mixin(to-yellow,
yellow);
@include animation-mixin(to-skyblue,
skyblue);
@include animation-mixin(to-red,
red);
.load1 {
    animation: to-yellow 4s ease infinite;
}

.load2 {
    animation: to-skyblue 4s 2s ease infinite;
}

.load3 {
    animation: to-red 4s 3s ease infinite;
}

.brrr:hover {
    /* Start the shake animation and make the animation last for 0.5 seconds */
    animation: shake 0.5s;
    /* When the animation is finished, start again */
    animation-iteration-count: infinite;
}

@keyframes shake {
    0% {
        transform: translate(1px, 1px) rotate(0deg);
    }
    10% {
        transform: translate(-1px, -2px) rotate(-1deg);
    }
    20% {
        transform: translate(-3px, 0px) rotate(1deg);
    }
    30% {
        transform: translate(3px, 2px) rotate(0deg);
    }
    40% {
        transform: translate(1px, -1px) rotate(1deg);
    }
    50% {
        transform: translate(-1px, 2px) rotate(-1deg);
    }
    60% {
        transform: translate(-3px, 1px) rotate(0deg);
    }
    70% {
        transform: translate(3px, 1px) rotate(-1deg);
    }
    80% {
        transform: translate(-1px, -1px) rotate(1deg);
    }
    90% {
        transform: translate(1px, 2px) rotate(0deg);
    }
    100% {
        transform: translate(1px, -2px) rotate(-1deg);
    }
}